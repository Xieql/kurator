apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: kurator-fleet-manager
  name: kurator-fleet-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: kurator-fleet-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kurator-fleet-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --v={{ .Values.logging.level }}
        - --webhook-port={{ .Values.webhook.port }}
        - --webhook-cert-dir={{ .Values.webhook.certMountPath }}
        image: {{ .Values.image.hub }}/fleet-manager:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: manager
        ports:
          - containerPort: {{ .Values.webhook.port }}
            name: webhook-server
            protocol: TCP
        volumeMounts:
          - mountPath: {{ .Values.webhook.certMountPath }}
            name: cert
            readOnly: true
      serviceAccountName: kurator-fleet-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: kurator-webhook-service-cert
