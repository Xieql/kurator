---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: pipelines.pipeline.kurator.dev
spec:
  group: pipeline.kurator.dev
  names:
    categories:
    - kurator-dev
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    singular: pipeline
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Pipeline is the top-level type for Kurator CI Pipeline.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PipelineSpec defines the desired state of a Pipeline.
            properties:
              description:
                description: Description allows an administrator to provide a description
                  of the pipeline.
                type: string
              sharedWorkspace:
                description: SharedWorkspace is the config of the PVC where task using
                  The PersistentVolumeClaim with this config will be created for each
                  pipeline execution it allows the user to specify e.g. size and StorageClass
                  for the volume. If not set, Kurator will create a PVC named Pipeline.name
                  using default config
                properties:
                  accessMode:
                    description: AccessMode determines the access modes for the volume,
                      e.g., ReadWriteOnce. This affects how the volume can be mounted.
                      "ReadWriteOnce" can be mounted in read/write mode to exactly
                      1 host "ReadOnlyMany" can be mounted in read-only mode to many
                      hosts "ReadWriteMany" can be mounted in read/write mode to many
                      hosts "ReadWriteOncePod" can be mounted in read/write mode to
                      exactly 1 pod, cannot be used in combination with other access
                      modes
                    type: string
                  requestsStorage:
                    description: StorageRequest defines the storage size required
                      for this PVC, e.g., 1Gi, 100Mi. It specifies the storage capacity
                      needed as part of ResourceRequirements.
                    pattern: ^[0-9]+(\.[0-9]+)?(Gi|Mi)$
                    type: string
                  storageClassName:
                    description: StorageClassName specifies the StorageClass name
                      to which this persistent volume belongs, e.g., manual. It allows
                      the PVC to use the characteristics defined by the StorageClass.
                    type: string
                  volumeMode:
                    description: VolumeMode specifies whether the volume should be
                      used with a formatted filesystem (Filesystem) or remain in raw
                      block state (Block). The Filesystem value is implied when not
                      included. "Block"  means the volume will not be formatted with
                      a filesystem and will remain a raw block device. "Filesystem"  means
                      the volume will be or is formatted with a filesystem.
                    type: string
                type: object
              tasks:
                description: Tasks is an ordered list of tasks in the pipeline, containing
                  detailed information about each task. The tasks will be executed
                  in the order they are listed.
                items:
                  properties:
                    customTask:
                      description: CustomTask enables defining a task directly within
                        the CRD if TaskRef is not used. This should only be used when
                        TaskRef is not provided.
                      properties:
                        args:
                          description: 'Args are the arguments for the entrypoint.
                            If not provided, the image''s CMD is used. Supports environment
                            variable expansion in the format $(VAR_NAME). More info:
                            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        command:
                          description: 'Command is the entrypoint array. It''s not
                            executed in a shell. If not provided, the image''s ENTRYPOINT
                            is used. Environment variables can be used in the format
                            $(VAR_NAME). More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        computeResources:
                          description: 'ResourceRequirements required by this Step.
                            Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                                in spec.resourceClaims, that are used by this container.
                                \n This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate. \n This field
                                is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        env:
                          description: List of environment variables to set in the
                            Step. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        image:
                          description: 'Image specifies the Docker image name. More
                            info: https://kubernetes.io/docs/concepts/containers/images'
                          type: string
                        script:
                          description: Script is the contents of an executable file
                            to execute. If Script is not empty, the CustomTask cannot
                            have a Command and the Args will be passed to the Script.
                          type: string
                      type: object
                    name:
                      description: Name is the name of the task.
                      type: string
                    predefinedTask:
                      description: PredefinedTask allows users to select a predefined
                        task. Users can choose a predefined task from a set list and
                        fill in their own parameters.
                      properties:
                        name:
                          description: Name specifies the predefined task template
                            to be used. This field is required to select the appropriate
                            PredefinedTask.
                          type: string
                        params:
                          additionalProperties:
                            type: string
                          description: Params contains key-value pairs for task-specific
                            parameters. The required parameters vary depending on
                            the TaskType chosen.
                          type: object
                      required:
                      - name
                      type: object
                    retries:
                      description: Retries represents how many times this task should
                        be retried in case of task failure. default values is zero.
                      type: integer
                  required:
                  - name
                  type: object
                type: array
            required:
            - tasks
            type: object
          status:
            properties:
              eventListenerServiceName:
                description: EventListenerServiceName specifies the name of the service
                  created by Kurator for event listeners. This name is useful for
                  users when setting up a gateway service and routing to this service.
                type: string
              phase:
                description: Phase describes the overall state of the Pipeline.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
